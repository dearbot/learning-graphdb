# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: dgraph

on:
  # push:
  #   branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 15 * * *'
  workflow_dispatch:
    inputs:
      timeout:
        description: 'timeout for minutes'     
        default: "1"
        
jobs:
  build:
    runs-on: ubuntu-latest
    #timeout-minutes: 360
    steps:
    - uses: actions/checkout@v2
    - name: Checkout data repo
      uses: actions/checkout@v2
      with:
        repository: dearbot/github-data-user
        token: ${{ secrets.PAT }}
        ref: graphql
        path: data
    - name: Checkout dgraph repo
      uses: actions/checkout@v2
      with:
        repository: dearbot/github-data-user
        token: ${{ secrets.PAT }}
        ref: dgraph
        path: dgraph
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - run: python dgraph.py ${{ secrets.DGRAPH_URL }} ${{ secrets.DGRAPH_TOKEN }} ${{ github.event.inputs.timeout }}
      if: github.event_name == 'workflow_dispatch'
    - run: python dgraph.py ${{ secrets.DGRAPH_URL }} ${{ secrets.DGRAPH_TOKEN }} 120
      if: github.event_name == 'schedule'
    - name: check for changes and git push
      run: |
        cd dgraph
        git branch --show-current
        if [[ `git status -s` ]]; then
          echo "CHANGED"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Add changes" -a
          git push
        else
          echo "NO CHANGED"
        fi
